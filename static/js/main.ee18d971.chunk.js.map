{"version":3,"sources":["woman.svg","Resume.js","App.js","serviceWorker.js","index.js","man.svg"],"names":["module","exports","Resume","prop","info","data","profiles","location","id","className","basics","gender","src","profileIcon","alt","style","width","profileIcon1","name","fontStyle","role","href","email","mobile","address","summary","map","summaryValue","summaryIndex","key","education","educationValue","educationIndex","degree","institute","percentage","Example","Home","console","log","value","index","boxShadow","to","pathname","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ee18d971.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/woman.45e7f501.svg\";","import React from 'react';\r\nimport data from './data.json';\r\nimport profileIcon from './man.svg';\r\nimport profileIcon1 from './woman.svg';\r\n\r\nlet Resume=(prop)=>{\r\n\tlet info=data.profiles[prop.location.data.id]; \r\n\treturn(\r\n\t\t<div className=\"row justify-content-center\">\r\n\t    {/* left part*/}\r\n\t    <div className=\"col-lg-3 m-2\">\r\n\t    \t<div className=\"card shadow\">\r\n\t    \t\t<div className=\"card-body p-2 text-center\">\r\n\t    \t\t{info.basics.gender===\"male\" ? <img src={profileIcon} alt=\"Profile icon\" style={{width:\"60px\"}}/> : <img src={profileIcon1} alt=\"Profile icon\" style={{width:\"60px\"}}/>}\r\n\t    \t\t<h2>{info.basics.name}</h2>\r\n\t    \t\t<h5 className=\"text-secondary\" style={{fontStyle:\"italic\"}}> {info.basics.role}</h5> <hr/>\r\n            \t<a href={\"mailto:\"+info.basics.email}> {info.basics.email}</a> <br>\r\n                        </br>\r\n            \t<a href={\"tel:\"+info.basics.mobile}> {info.basics.mobile}</a> <br />\r\n            \t<p>{info.basics.address}</p>\r\n\t    \t\t</div>\r\n\t    \t</div>\r\n\t    </div>\r\n\t\t\t{/* right part*/}\r\n\t\t<div className=\"col-lg-8 m-2\">\r\n\t\t\t<div className=\"card shadow\">\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<h3>Summary</h3><hr/>\r\n\t\t\t\t\t <ul>\r\n                            {info.summary.map((summaryValue,summaryIndex)=>(\r\n                                <li key={summaryIndex}>{summaryValue}</li>\r\n                            ))}\r\n                       </ul>\r\n\r\n                       <h3>Educational Qualifications</h3><hr/>\r\n                       <div className=\"table-responsive\">\r\n                       <table className=\"table\">\r\n                       \t<thead className=\"thead-dark\">\r\n                       \t\t<tr>\r\n                       \t\t\t<th>Degree</th>\r\n                       \t\t\t<th>Institute</th>\r\n                       \t\t\t<th>Percentage</th>\r\n                       \t\t</tr>\r\n                       \t</thead>\r\n\r\n                       \t<tbody>\r\n                       \t\t{info.education.map((educationValue,educationIndex)=>(\r\n                       \t\t\t<tr key={educationIndex}>\r\n                       \t\t\t\t<td> {educationValue.degree}</td>\r\n                       \t\t\t\t<td> {educationValue.institute}</td>\r\n                       \t\t\t\t<td> {educationValue.percentage}</td>\r\n                       \t\t\t</tr>\r\n                       \t\t\t))}\r\n                       \t\t</tbody>\r\n                       \t</table>\r\n                       </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Resume;","import React from 'react';\nimport data from './data.json';\nimport profileIcon from './man.svg';\nimport profileIcon1 from './woman.svg';\nimport {BrowserRouter,Route,Switch,Link} from 'react-router-dom';\nimport Resume from './Resume';\n\n// import SC from './StatesConcept';\n\nlet App=()=>{\n  \n  return(\n    \n      <BrowserRouter>\n        <Switch>\n        <Route exact path='/sample' component={Example}/>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/Resume' component={Resume}/>\n        </Switch>\n      </BrowserRouter>\n   \n  )\n}\nlet Example=()=>{\n  return(\n    <div>\n      <h2> Example component</h2>\n    </div>\n  )\n}\n\nlet Home=()=>{\n  let profiles=data.profiles;\n  console.log(profiles);\n  return(\n    <div className=\"row justify-content-center\">\n    {profiles.map((value,index)=>(\n      <div className=\"col-lg-4 col-md-4 col-sm-10 mt-1\" key={index}>\n      {/* Card */}\n      <div className=\"card\" style={{boxShadow:\"0px 8px 8px -8px #000\"}}>\n          <div className=\"card-body text-center\">\n            {/* <img src={profileIcon} alt=\"Profile icon\" style={{width:\"30%\"}}/> */}\n            {value.basics.gender===\"male\" ? <img src={profileIcon} alt=\"Profile icon\" style={{width:\"60px\"}}/> : <img src={profileIcon1} alt=\"Profile icon\" style={{width:\"60px\"}}/>}\n            <h3> {value.basics.name} </h3>\n            <h5 className=\"text-secondary\" style={{fontStyle:\"italic\"}}> {value.basics.role}</h5> <hr/>\n            <a href={\"mailto:\"+value.basics.email}> {value.basics.email}</a> <br>\n                        </br>\n            <a href={\"tel:\"+value.basics.mobile}> {value.basics.mobile}</a> <br />\n            <Link to={{pathname:'/resume',data:{id:index}}} className=\"btn btn-secondary text-white btn-block btn-sm\"> View profile</Link>\n          </div>\n        </div>\n      </div>\n        ))}\n    </div>\n        )\n      }\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './bootstrap/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/man.04e78049.svg\";"],"sourceRoot":""}